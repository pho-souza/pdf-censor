name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build app
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
          - os: macos-latest
          - os: windows-2019
    steps:
      - name: Install tk on ubuntu
        if: ${{ matrix.config.os == 'ubuntu-22.04'}}
        run: |
          sudo apt-get update
          sudo apt install python3-tk python3-dev python3-setuptools tcl

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install dependencies for ${{ matrix.config.os }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with pyinstaller for ${{ matrix.config.os }} - Not macos
        if: ${{ matrix.config.os != 'macos-latest'}}
        run: pyinstaller --noconfirm --noupx --windowed --name pdf_censor --additional-hooks-dir "."  --add-data "pydf_text_remover/gui_assets/*:gui_assets" --icon "pydf_text_remover/gui_assets/logo.ico" ./pydf_text_remover/gui.py

        - name: Build with pyinstaller for ${{ matrix.config.os }} - FOR MAC
        if: ${{ matrix.config.os == 'macos-latest'}}
        run: pyinstaller --noconfirm --noupx --windowed --name pdf_censor --additional-hooks-dir "."  --add-data "pydf_text_remover/gui_assets/*:gui_assets" --icon "pydf_text_remover/gui_assets/logo.icns" ./pydf_text_remover/gui.py

      - name: Rename builded app
        run: mv ./dist ./dist-${{ matrix.config.os }}

      - name: Upload result job ${{ matrix.config.os }}
        uses: actions/upload-artifact@v3
        with:
          name: pdf_censor-artifact
          path: ./dist*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: pdf_censor-pyinstaller-artifact

      - name: Zip file windows
        run: zip -r pdf_censor_windows.zip dist-windows-*

      - name: Zip file ubuntu
        run: zip -r pdf_censor_ubuntu.zip dist-ubuntu-*

      - name: Zip file macos
        run: zip -r pdf_censor_macos.zip dist-macos-*

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            pdf_censor_windows.zip
            pdf_censor_ubuntu.zip
            pdf_censor_macos.zip
